-- MySQL Script generated by MySQL Workbench
-- Tue Feb  1 16:19:53 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tecstore
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `tecstore`;

CREATE SCHEMA IF NOT EXISTS `tecstore` DEFAULT CHARACTER SET utf8 ;
USE `tecstore` ;

-- -----------------------------------------------------
-- Table `tecstore`.`utente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tecstore`.`utente` ;

CREATE TABLE IF NOT EXISTS `tecstore`.`utente` (
  `CF` CHAR(16) NOT NULL,
  `Nome` VARCHAR(45) NOT NULL,
  `Cognome` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  `Via` VARCHAR(45) NOT NULL,
  `NumeroCivico` VARCHAR(8) NOT NULL,
  `Citta` VARCHAR(45) NOT NULL,
  `Provincia` CHAR(2) NOT NULL,
  `CAP` INT(5) NOT NULL,
  `Tipologia` INT(1) NOT NULL,
  `CartaDiCredito` CHAR(16) NULL,
  PRIMARY KEY (`CF`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `tecstore`.`articolo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tecstore`.`articolo` ;

CREATE TABLE IF NOT EXISTS `tecstore`.`articolo` (
  `ID` VARCHAR(45) NOT NULL,
  `Nome` VARCHAR(45) NOT NULL,
  `Descrizione` VARCHAR(512) NOT NULL,
  `IDVenditore` CHAR(16) NOT NULL,
  `Quantita` INT(3) NOT NULL,
  `Prezzo` FLOAT(5,2) NOT NULL,
  `Stato` VARCHAR(45) NOT NULL,
  `IDCentralinista` CHAR(16) NULL,
  `Data` DATETIME ,
  `Rimborsabile` TINYINT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `FK_1`
    FOREIGN KEY (`IDVenditore`)
    REFERENCES `tecstore`.`utente` (`CF`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_2`
    FOREIGN KEY (`IDCentralinista`)
    REFERENCES `tecstore`.`utente` (`CF`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `tecstore`.`carrello`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tecstore`.`carrello` ;

CREATE TABLE IF NOT EXISTS `tecstore`.`carrello` (
  `IDCliente` CHAR(16) NOT NULL,
  `IDArticolo` VARCHAR(45) NOT NULL,
  `Quantita` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`IDCliente`, `IDArticolo`),
  CONSTRAINT `FK_11`
    FOREIGN KEY (`IDArticolo`)
    REFERENCES `tecstore`.`articolo` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_21`
    FOREIGN KEY (`IDCliente`)
    REFERENCES `tecstore`.`utente` (`CF`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `tecstore`.`foto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tecstore`.`foto` ;

CREATE TABLE IF NOT EXISTS `tecstore`.`foto` (
  `ID` VARCHAR(45) NOT NULL,
  `IDArticolo` VARCHAR(45) NULL,
  `Foto` BLOB(500000) NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `FK_14`
    FOREIGN KEY (`IDArticolo`)
    REFERENCES `tecstore`.`articolo` (`ID`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `tecstore`.`ordine`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tecstore`.`ordine` ;

CREATE TABLE IF NOT EXISTS `tecstore`.`ordine` (
  `ID` VARCHAR(45) NOT NULL,
  `IDCliente` CHAR(16) NOT NULL,
  `IDArticolo` VARCHAR(45) NULL,
  `Quantita` INT(3) NOT NULL,
  `Data` DATETIME,
  `Stato` VARCHAR(45) NOT NULL,
  `CodiceTracciamento` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `FK_10`
    FOREIGN KEY (`IDCliente`)
    REFERENCES `tecstore`.`utente` (`CF`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `FK_20`
    FOREIGN KEY (`IDArticolo`)
    REFERENCES `tecstore`.`articolo` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `tecstore`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tecstore`.`ticket` ;

CREATE TABLE IF NOT EXISTS `tecstore`.`ticket` (
  `IDTicket` VARCHAR(45) NOT NULL,
  `IDCliente` CHAR(16) NOT NULL,
  `Tipologia` VARCHAR(45) NULL,
  `Stato` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IDTicket`),
  CONSTRAINT `FK_17`
    FOREIGN KEY (`IDCliente`)
    REFERENCES `tecstore`.`utente` (`CF`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `tecstore`.`messaggio`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tecstore`.`messaggio` ;

CREATE TABLE IF NOT EXISTS `tecstore`.`messaggio` (
  `IDTicket` VARCHAR(45) NOT NULL,
  `CF` CHAR(16) NOT NULL,
  `Contenuto` VARCHAR(512) NOT NULL,
  `Date` DATETIME,
  PRIMARY KEY (`CF`, `IDTicket`),
  CONSTRAINT `FK_15`
    FOREIGN KEY (`IDTicket`)
    REFERENCES `tecstore`.`ticket` (`IDTicket`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_25`
    FOREIGN KEY (`CF`)
    REFERENCES `tecstore`.`utente` (`CF`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;

SET SQL_MODE = '';
DROP USER IF EXISTS magazziniere;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'magazziniere' IDENTIFIED BY 'magazziniere';

GRANT UPDATE, SELECT ON TABLE `tecstore`.`ordine` TO 'magazziniere';
SET SQL_MODE = '';
DROP USER IF EXISTS centralinista;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'centralinista' IDENTIFIED BY 'centralinista';

GRANT SELECT, UPDATE, REFERENCES ON TABLE `tecstore`.`ticket` TO 'centralinista';
GRANT CREATE, SELECT, UPDATE ON TABLE `tecstore`.`messaggio` TO 'centralinista';
GRANT SELECT, UPDATE ON TABLE `tecstore`.`articolo` TO 'centralinista';
SET SQL_MODE = '';
DROP USER IF EXISTS cliente;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'cliente' IDENTIFIED BY 'cliente';

GRANT ALL ON TABLE `tecstore`.`utente` TO 'cliente';
GRANT UPDATE, SELECT, INSERT, REFERENCES ON TABLE `tecstore`.`ticket` TO 'cliente';
GRANT INSERT, SELECT, UPDATE ON TABLE `tecstore`.`messaggio` TO 'cliente';
GRANT INSERT, SELECT, UPDATE, REFERENCES ON TABLE `tecstore`.`ordine` TO 'cliente';
GRANT INSERT, SELECT, UPDATE, REFERENCES ON TABLE `tecstore`.`articolo` TO 'cliente';
GRANT UPDATE, SELECT, INSERT ON TABLE `tecstore`.`carrello` TO 'cliente';
GRANT UPDATE, SELECT, INSERT, REFERENCES ON TABLE `tecstore`.`foto` TO 'cliente';
SET SQL_MODE = '';
DROP USER IF EXISTS ammpersonale;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'ammpersonale' IDENTIFIED BY 'ammpersonale';

GRANT SELECT, UPDATE, INSERT, DELETE, REFERENCES ON TABLE `tecstore`.`utente` TO 'ammpersonale';
SET SQL_MODE = '';
DROP USER IF EXISTS ammcatalogo;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'ammcatalogo' IDENTIFIED BY 'ammcatalogo';

GRANT INSERT, SELECT, UPDATE, REFERENCES ON TABLE `tecstore`.`articolo` TO 'ammcatalogo';
GRANT UPDATE, SELECT, INSERT ON TABLE `tecstore`.`foto` TO 'ammcatalogo';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

CREATE TRIGGER before_insert_articolo
  BEFORE INSERT ON `articolo`
  FOR EACH ROW
  SET new.ID = uuid();

CREATE TRIGGER before_insert_foto
  BEFORE INSERT ON `foto`
  FOR EACH ROW
  SET new.ID = uuid();
  
CREATE TRIGGER before_insert_ordine
  BEFORE INSERT ON `ordine`
  FOR EACH ROW
  SET new.ID = uuid();
  
CREATE TRIGGER before_insert_ticket
  BEFORE INSERT ON `ticket`
  FOR EACH ROW
  SET new.IDTicket = uuid();
